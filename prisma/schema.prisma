// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model
model User {
  id           String    @id @default(uuid())
  email        String    @unique
  passwordHash String
  firstName    String?
  lastName     String?
  name         String?
  isActive     Boolean   @default(true)
  sessions     Session[]
  links        Link[]
  resetCode    String? // Temporary reset code
  resetExpiry  DateTime? // Reset code expiration time
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

// Session model for authentication
model Session {
  id           String   @id @default(uuid())
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  refreshToken String?  @unique // Hashed refresh token
  isActive     Boolean  @default(true)
  userAgent    String?
  ipAddress    String?
  lastActive   DateTime @default(now())
  expiresAt    DateTime
  createdAt    DateTime @default(now())
}

model Link {
  id         String    @id @default(uuid())
  filePath   String
  shortUrl   String    @unique
  visibility Boolean   @default(true)
  userId     String
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt  DateTime?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

// File hash mapping table for storing file content hash and file path mappings
model FileHash {
  id          String   @id @default(uuid())
  hash        String   @unique // Hash value of file content
  filePath    String // File path in MinIO
  size        Int // File size (bytes)
  createdAt   DateTime @default(now())
  accessedAt  DateTime @default(now()) // Last access time
  accessCount Int      @default(1) // Access count for usage statistics

  @@index([hash])
}
